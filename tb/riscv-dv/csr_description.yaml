
- csr: misa
  description: >
    Machine ISA Register
  address: 0x301
  privilege_mode: M
  rv32:
    - field_name: MXL
      description: >
        Encodes native base ISA width
      type: WARL
      reset_val: 1
      msb: 31
      lsb: 30
    - field_name: Extensions
      description: >
          Encodes all supported ISA extensions
      type: WARL
      reset_val: 0x104
      msb: 25
      lsb: 0
      warl_legalize: |
        # I bit remains 1, C bit can be toggled, all other bits are 0
        val_out = (val_in & 0x4) | 0x100
  rv64:
    - field_name: MXL
      description: >
        Encodes native base ISA width
      type: WARL
      reset_val: 2
      msb: 63
      lsb: 62
    - field_name: Extensions
      description: >
        Encodes all supported ISA extensions
      type: WARL
      reset_val: 0x104
      msb: 25
      lsb: 0
      warl_legalize: |
        # I bit remains 1, C bit can be toggled, all other bits are 0
        val_out = (val_in & 0x4) | 0x100

- csr: mwarlexample
  description: >
    Example of WARL field
  address: 0x100
  privilege_mode: M
  rv32:
    - field_name: WARLTest
      description: >
        Demonstrates more advanced WARL legalization
      type: WARL
      reset_val: 0xf
      msb: 31
      lsb: 0
      warl_legalize: |
        # Top 16 bits can be any value, bottom 16 bits can only be 0xf000 or
        # 0x000f retain existing bottom bits if new value isn't legal
        bottom_half = val_in & 0xffff
        if bottom_half != 0x000f and bottom_half != 0xf000:
          bottom_half = val_orig & 0xffff
        val_out = (val_in & 0xffff0000) | bottom_half